{"version":3,"sources":["App.js","serviceWorker.js","index.js","logo.png"],"names":["bell","Audio","load","App","useState","JSON","parse","localStorage","getItem","savedData","setSavedData","useEffect","lastCompleted","setItem","stringify","currentKey","_","get","secondsRemaining","intervalRef","start","setTimer","t","setInterval","decrementSeconds","pause","clearInterval","reset","timer","_isRunning","Boolean","timeText","floor","currentActivityIndex","findIndex","activitiesList","key","previousActivity","nth","currentActivity","find","head","nextActivity","concat","_handleNext","play","className","src","logo","alt","size","ceil","onClick","flatten","map","name","hasStretch","hasRolling","part","output","push","type","label","startCase","activityBuilder","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","rootElement","document","getElementById","hasChildNodes","hydrate","render","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.9631e0b0.chunk.js","sourcesContent":["\n// dev\nimport React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\n\n// app\nimport logo from \"./logo.png\";\nconst bell = new Audio( \"./single-ding-sound-effect.mp3\" );\nbell.load();\n\n\n//\n// App\n//\n\nconst activityDurationSeconds = 60 * 2.5;\n\nexport default function App () {\n\tconst [ savedData, setSavedData ] = useState( JSON.parse( localStorage.getItem( \"savedData\" )));\n\tuseEffect(() => {\n\t\tif ( !savedData ) setSavedData({ lastCompleted: null });\n\t\tlocalStorage.setItem( \"savedData\", JSON.stringify( savedData ));\n\t}, [ savedData ]);\n\tconst currentKey = _.get( savedData, \"currentKey\" );\n\t\n\tconst [ timer, setTimer ] = useState({ \n\t\tsecondsRemaining: activityDurationSeconds,\n\t\tintervalRef: null,\n\t\tstart: () => setTimer( t => ({ ...t, intervalRef: setInterval( t.decrementSeconds, 1000 ) })),\n\t\tpause: () => setTimer( t => {\n\t\t\tclearInterval( t.intervalRef );\n\t\t\treturn { ...t, intervalRef: null };\n\t\t}),\n\t\treset: () => setTimer( t => {\n\t\t\tclearInterval( t.intervalRef );\n\t\t\treturn { ...t, intervalRef: null, secondsRemaining: activityDurationSeconds };\n\t\t}),\n\t\tdecrementSeconds: () => setTimer( t => ({ ...t, secondsRemaining: t.secondsRemaining - 1 })),\n\t});\n\tconst { secondsRemaining, intervalRef, start, pause, reset } = timer;\n\tconst _isRunning = Boolean( intervalRef );\n\tconst timeText = `${ _.floor( secondsRemaining / 60 )}:${ secondsRemaining%60 < 10 ? `0${ secondsRemaining%60 }` : secondsRemaining%60 }`;\n\n\tconst currentActivityIndex = _.findIndex( activitiesList, { key: currentKey });\n\n\tconst previousActivity = _.nth( activitiesList, currentActivityIndex - 1 );\n\tconst currentActivity = currentKey ? _.find( activitiesList, { key: currentKey }) : _.head( activitiesList );\n\tconst nextActivity = _.nth( _.concat( activitiesList, activitiesList ), currentActivityIndex + 1 );\n\n\tconst _handleNext = () => {\n\t\tsetSavedData({ ...savedData, currentKey: _.get( nextActivity, \"key\" ) });\n\t\treset();\n\t};\n\n\tconst _handleBack = () => {\n\t\tif ( _isRunning ) reset();\n\t\telse setSavedData({ ...savedData, currentKey: _.get( previousActivity, \"key\" ) });\n\t};\n\n\tuseEffect(() => { \n\t\tif ( secondsRemaining <= 0 ) {\n\t\t\tbell.play();\n\t\t\t_handleNext();\n\t\t}\n\t}, [ secondsRemaining ]);\n\n\treturn (\n\t\t<div className=\"body\">\n\t\t\t<div className=\"header\">\n\t\t\t\t<img src={ logo } alt=\"Site logo, woman stretching\" />\t\n\t\t\t\t<p>A rolling queue of { _.size( activitiesList ) } stretching and rolling activities with a timer and a record of where you left off last time. Try to do { _.ceil( _.size( activitiesList ) / 7 ) } every day to get through every body part in a week.</p>\n\t\t\t</div>\n\t\t\t<div className=\"current\">\n\t\t\t\t<p className=\"-smaller\">Previous activity: { _.get( previousActivity, \"label\" )}</p>\n\t\t\t\t<h4>Current activity: { _.get( currentActivity, \"label\" )}</h4>\n\t\t\t\t<p className=\"-smaller\">Next activity: { _.get( nextActivity, \"label\" )}</p>\n\t\t\t</div>\n\t\t\t<div className=\"main\">\n\t\t\t\t<div className=\"timer\">\n\t\t\t\t\t<div className=\"time\">\n\t\t\t\t\t\t{ timeText }\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t<button onClick={ _isRunning ? reset : _handleBack }>{ _isRunning ? \"Restart\" : \"Back\" }</button>\n\t\t\t\t\t\t<button onClick={ _isRunning ? pause : start }>{ _isRunning ? \"Pause\" : \"Start\" }</button>\n\t\t\t\t\t\t<button onClick={ _handleNext }>Next</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst activityBuilder = ({ name, hasStretch, hasRolling }) => {\n\tconst output = [];\n\n\tif ( hasRolling ) output.push({ key: `${ name }-roll-right`, type: \"rolling\", label: `Foam Roll Right ${ _.startCase( name ) }` },\n\t\t{ key: `${ name }-roll-left`, type: \"rolling\", label: `Foam Roll Left ${ _.startCase( name ) }` });\n\n\tif ( hasStretch ) output.push({ key: `${ name }-stretch-right`, type: \"stretching\", label: `Stretch Right ${ _.startCase( name ) }` },\n\t\t{ key: `${ name }-stretch-left`, type: \"stretching\", label: `Stretch Left ${ _.startCase( name ) }` });\n\n\treturn output;\n};\n\nconst bodyPartMap = [\n\t{ name: \"hamstring\", hasStretch: true, hasRolling: true },\n\t{ name: \"glute\", hasStretch: true, hasRolling: true },\n\t{ name: \"lat\", hasStretch: true, hasRolling: true },\n\t{ name: \"pec\", hasStretch: true, hasRolling: true },\n\t{ name: \"quad\", hasStretch: true, hasRolling: true },\n\t{ name: \"hip-flexor\", hasStretch: true, hasRolling: true },\n\t{ name: \"forearm\", hasStretch: true, hasRolling: true },\n\t{ name: \"tricep\", hasStretch: true, hasRolling: true },\n\t{ name: \"front-shoulder\", hasStretch: true, hasRolling: false },\n\t{ name: \"groin\", hasStretch: true, hasRolling: true },\n\t{ name: \"calf\", hasStretch: true, hasRolling: true },\n\t{ name: \"trap\", hasStretch: false, hasRolling: true },\n];\n\nconst activitiesList = _.flatten( _.map( bodyPartMap, part => activityBuilder( part )));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === \"[::1]\" ||\n\t// 127.0.0.0/8 are considered localhost for IPv4.\n\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n\t),\n);\n\nexport function register( config ) {\n\tif ( process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator ) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL( process.env.PUBLIC_URL, window.location.href );\n\t\tif ( publicUrl.origin !== window.location.origin ) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener( \"load\", () => {\n\t\t\tconst swUrl = `${ process.env.PUBLIC_URL }/service-worker.js`;\n\n\t\t\tif ( isLocalhost ) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker( swUrl, config );\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA\",\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW( swUrl, config );\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW( swUrl, config ) {\n\tnavigator.serviceWorker\n\t\t.register( swUrl )\n\t\t.then( registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif ( installingWorker == null ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif ( installingWorker.state === \"installed\" ) {\n\t\t\t\t\t\tif ( navigator.serviceWorker.controller ) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif ( config && config.onUpdate ) {\n\t\t\t\t\t\t\t\tconfig.onUpdate( registration );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log( \"Content is cached for offline use.\" );\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif ( config && config.onSuccess ) {\n\t\t\t\t\t\t\t\tconfig.onSuccess( registration );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch( error => {\n\t\t\tconsole.error( \"Error during service worker registration:\", error );\n\t\t});\n}\n\nfunction checkValidServiceWorker( swUrl, config ) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch( swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" },\n\t})\n\t\t.then( response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get( \"content-type\" );\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t( contentType != null && contentType.indexOf( \"javascript\" ) === -1 )\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then( registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW( swUrl, config );\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\",\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ( \"serviceWorker\" in navigator ) {\n\t\tnavigator.serviceWorker.ready.then( registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","\n// dev\nimport React from \"react\";\nimport { hydrate, render } from \"react-dom\";\n\n// app\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n//\n// Index \n//\n\nconst rootElement = document.getElementById( \"root\" );\nif ( rootElement.hasChildNodes()) {\n\thydrate( <App />, rootElement );\n} else {\n\trender( <App />, rootElement );\n}\n\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/logo.82113bab.png\";"],"sourceRoot":""}